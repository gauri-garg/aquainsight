// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview An AI assistant that matches eDNA sequences against a database of known species.
 *
 * - matchEdnaSequence - A function that handles the eDNA sequence matching process.
 * - MatchEdnaSequenceInput - The input type for the matchEdnaSequence function.
 * - MatchEdnaSequenceOutput - The return type for the matchEdnaSequence function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const MatchEdnaSequenceInputSchema = z.object({
  ednaSequence: z
    .string()
    .describe('The eDNA sequence to match against known species.'),
  speciesDatabaseDescription: z.string().describe('The description of the species database.'),
});
export type MatchEdnaSequenceInput = z.infer<typeof MatchEdnaSequenceInputSchema>;

const MatchEdnaSequenceOutputSchema = z.object({
  speciesMatches: z
    .array(z.string())
    .describe('An array of species that match the eDNA sequence. If no matches are found, this will be an empty array.'),
  confidenceScores: z
    .array(z.number())
    .describe('An array of confidence scores for each species match. If no matches are found, this will be an empty array.'),
});
export type MatchEdnaSequenceOutput = z.infer<typeof MatchEdnaSequenceOutputSchema>;

export async function matchEdnaSequence(input: MatchEdnaSequenceInput): Promise<MatchEdnaSequenceOutput> {
  return matchEdnaSequenceFlow(input);
}

const prompt = ai.definePrompt({
  name: 'matchEdnaSequencePrompt',
  input: {schema: MatchEdnaSequenceInputSchema},
  output: {schema: MatchEdnaSequenceOutputSchema},
  prompt: `You are an expert in eDNA sequence matching.

You will be provided with an eDNA sequence and a description of the species database.

Your task is to identify potential species matches from the database for the given eDNA sequence.

eDNA Sequence: {{{ednaSequence}}}
Species Database Description: {{{speciesDatabaseDescription}}}

Output the species matches and their corresponding confidence scores.

If no plausible species are found in the described database for the given sequence, return empty arrays for both 'speciesMatches' and 'confidenceScores'.

Format the output as a JSON object with 'speciesMatches' and 'confidenceScores' arrays.
`,
});

const matchEdnaSequenceFlow = ai.defineFlow(
  {
    name: 'matchEdnaSequenceFlow',
    inputSchema: MatchEdnaSequenceInputSchema,
    outputSchema: MatchEdnaSequenceOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
